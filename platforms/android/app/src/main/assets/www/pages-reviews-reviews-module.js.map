{"version":3,"sources":["webpack:///./src/app/pages/reviews/reviews.module.ts","webpack:///./src/app/pages/reviews/reviews.page.html","webpack:///./src/app/pages/reviews/reviews.page.scss","webpack:///./src/app/pages/reviews/reviews.page.ts"],"names":[],"mappings":"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","file":"pages-reviews-reviews-module.js","sourcesContent":["\nimport { ReviewsPage } from './reviews.page';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\nimport { IonicRatingModule } from 'ionic4-rating';//this is import package.\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReviewsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    IonicRatingModule , \n    RouterModule.forChild(routes),\n    ReactiveFormsModule\n  ],\n  declarations: [ReviewsPage]\n})\nexport class ReviewsPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>Reviews</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button routerLink=\\\"/login\\\" routerDirection=\\\"root\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"log-out\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content>\\n  <ng-container *ngIf=\\\"existingcust\\\">\\n    <ion-card class=\\\"cardfillsize\\\">\\n      <form (ngSubmit)=\\\"submitreview()\\\" [formGroup]=\\\"reviewform\\\">\\n        <ion-card-header>\\n          <ion-card-title>\\n            Write Review\\n            <rating name=\\\"stars\\\" formControlName=\\\"stars\\\" readonly=\\\"false\\\" size=\\\"default\\\">\\n            </rating>\\n          </ion-card-title>\\n\\n        </ion-card-header>\\n\\n        <ion-card-content>\\n          <ion-input placeholder=\\\"Enter Your Review\\\" type=\\\"text\\\" name=\\\"review\\\" formControlName=\\\"review\\\"></ion-input>\\n          <ion-button class=\\\"ion-padding-horizontal\\\" color=\\\"primary\\\" expand=\\\"full\\\" type=\\\"submit\\\"\\n            [disabled]=\\\"!reviewform.valid\\\">Submit</ion-button>\\n\\n\\n        </ion-card-content>\\n      </form>\\n    </ion-card>\\n  </ng-container>\\n  <ion-card class=\\\"cardsize\\\" *ngFor=\\\"let item of reviews | async\\\">\\n    \\n    <ion-card-header>\\n      <ion-card-title >\\n          <ion-item>\\n              {{ item.title }} \\n              <rating slot =\\\"end\\\" [(ngModel)]=\\\"item.stars\\\" readonly=\\\"true\\\" size=\\\"default\\\" (ngModelChange)=\\\"onRateChange($event)\\\">\\n                </rating>\\n            </ion-item>\\n        \\n        \\n      </ion-card-title>\\n\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-item lines=\\\"none\\\">\\n          {{ item.review }}\\n          <ion-note slot=\\\"end\\\"> {{ item.date?.seconds*1000 | date: 'MMM d' }}</ion-note>\\n        \\n      </ion-item>\\n      \\n\\n\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\"","module.exports = \".cardsize {\\n  height: 30%; }\\n\\n.cardfillsize {\\n  height: 50%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zbGVldGVsZWN0cm9uaWNzL0RvY3VtZW50cy9hcHAgcHJvamVjdC9nb2xmbmV3L3NyYy9hcHAvcGFnZXMvcmV2aWV3cy9yZXZpZXdzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQVUsRUFBQTs7QUFFVjtFQUNJLFdBQVUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Jldmlld3MvcmV2aWV3cy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZHNpemV7XG4gICAgaGVpZ2h0OjMwJTtcbiAgICB9XG4gICAgLmNhcmRmaWxsc2l6ZXtcbiAgICAgICAgaGVpZ2h0OjUwJTtcbiAgICAgICAgfSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { NavController } from '@ionic/angular';\n\n\nexport interface MyData2 {\n  // name: string;\n  title: string;\n  review: string;\n}\n@Component({\n  selector: 'app-reviews',\n  templateUrl: './reviews.page.html',\n  styleUrls: ['./reviews.page.scss'],\n})\nexport class ReviewsPage implements OnInit {\n  reviewform: FormGroup;\n  reviews: Observable<MyData2[]>;\n  existingcust: boolean;\n  updaterating: string;\n  id: string;\n  firstname:string;\n  lastname:string;\n  date:string;\n  private reviewsCollection: AngularFirestoreCollection<MyData2>;\n  // private usersCollection: AngularFirestoreDocument<MyData3>;\n\n  constructor(private navCtrl: NavController, private auth: AuthService, private fb: FormBuilder, private db: AngularFirestore) {\n    this.id = this.auth.getprofile();\n    this.reviewsCollection = db.collection<MyData2>('reviews', ref => ref.orderBy('date'));\n    // this.usersCollection = db.collection<MyData3>('users').doc(this.id);\n\n    this.reviews = this.reviewsCollection.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as MyData2;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    );\n    this.id = this.auth.getprofile();\n    let documentRef = db.doc('users/' + this.id);\n\n    documentRef.get().subscribe((documentSnapshot) => {\n      if (documentSnapshot.exists) {\n        const data = documentSnapshot.data();\n        this.existingcust = data.customer;\n        this.firstname = data.first_name;\n        this.lastname = data.last_name;\n\n        console.log(`Data: ` + this.existingcust);\n      }\n    });\n    // this.users = this.usersCollection.get().forEach(\n    //   actions =>{\n    //     const data = actions.data();\n    //     const id = actions.id;\n    //     this.existingcust = data;\n    //     return { id, ...data };\n    //   }\n    // );\n    // console.log(this.existingcust);\n\n  }\n  ngOnInit() {\n    this.reviewform = this.fb.group({\n      review: ['', [Validators.required]],\n      stars: ['', [Validators.required]]\n\n    });\n  }\n  updatecustomer(){\n    this.existingcust = false;\n    return new Promise<any>((resolve, reject) => {\n      this.db.collection('users').doc(this.id).update({customer:this.existingcust})\n      .then(\n        res => resolve(res),\n        err => reject(err)\n      )\n    })\n  }\n  submitreview() {\n    \n    let reviewjson = {\n      review: this.reviewform.value.review,\n      stars: this.reviewform.value.stars,\n      title:this.firstname+\" \"+this.lastname,\n      date:new Date()\n    };\n\n    this.db.collection('reviews').add(reviewjson);\n    this.navCtrl.navigateForward('/reviews');\nthis.updatecustomer();\n  }\n  onRateChange(event) {\n    console.log('Your rate:', event);\n  }\n  test() {\n    console.log(this.reviewform.value);\n  }\n}\n"],"sourceRoot":""}