{"version":3,"sources":["webpack:///./src/app/pages/register/register.module.ts","webpack:///./src/app/pages/register/register.page.html","webpack:///./src/app/pages/register/register.page.scss","webpack:///./src/app/pages/register/register.page.ts"],"names":[],"mappings":"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","file":"pages-register-register-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button defaultHref=\\\"/login\\\"></ion-back-button>\\n      </ion-buttons>\\n      <ion-title>Create Account</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content padding>\\n  <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\n  \\n    <ion-item lines=\\\"none\\\">\\n      <ion-label position=\\\"stacked\\\">Email</ion-label>\\n      <ion-input type=\\\"email\\\" placeholder=\\\"john@doe.com\\\" formControlName=\\\"email\\\"></ion-input>\\n    </ion-item>\\n  \\n    <ion-item lines=\\\"none\\\">\\n      <ion-label position=\\\"stacked\\\">First name</ion-label>\\n      <ion-input placeholder=\\\"John\\\" formControlName=\\\"first_name\\\"></ion-input>\\n    </ion-item>\\n  \\n    <ion-item lines=\\\"none\\\">\\n      <ion-label position=\\\"stacked\\\">Last name</ion-label>\\n      <ion-input placeholder=\\\"Doe\\\" formControlName=\\\"last_name\\\"></ion-input>\\n    </ion-item>\\n  \\n    <ion-item lines=\\\"none\\\">\\n      <ion-label position=\\\"stacked\\\">Password</ion-label>\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\n    </ion-item>\\n  \\n  \\n    <ion-button expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-padding-horizontal ion-margin-vertical\\\"\\n    color=\\\"primary\\\" [disabled]=\\\"!registerForm.valid\\\">\\n  <ion-icon name=\\\"checkmark\\\" slot=\\\"end\\\"></ion-icon>\\n  Register\\n  </ion-button>\\n  </form>\\n  </ion-content>\\n  \"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJ9 */\"","import { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AlertController, ToastController, LoadingController } from '@ionic/angular';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n  registerForm: FormGroup;\n\n  constructor(private fb: FormBuilder,\n    private auth: AuthService,\n    private alertCtrl: AlertController,\n    private toastCtrl: ToastController,\n    private router: Router,\n    private loadingCtrl: LoadingController) { }\n\n  ngOnInit() {\n    this.registerForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      first_name: ['', Validators.required],\n      last_name: ['', Validators.required]\n    });\n  }\n\n  async register() {\n    let loading = await this.loadingCtrl.create({\n      message: 'Loading...'\n    });\n\n    await loading.present();\n\n    this.auth.signUp(this.registerForm.value).then(async res => {\n      loading.dismiss();\n\n      let toast = await this.toastCtrl.create({\n        duration: 3000,\n        message: 'Successfully created new Account!'\n      });\n      toast.present();\n      this.router.navigateByUrl('/login');\n    }, async err => {\n      loading.dismiss();\n      let alert = await this.alertCtrl.create({\n        header: 'Error',\n        message: err.message,\n        buttons: ['OK']\n      });\n      alert.present();\n    });\n  }\n\n}\n"],"sourceRoot":""}